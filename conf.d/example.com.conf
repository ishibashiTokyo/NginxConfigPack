server {
    listen      443 ssl http2;
    listen [::]:443 ssl http2;

    server_name example.com;

    set  $base /var/www;
    root $base/html;

    # IP address to domain
    # if ($host != "example.com") {
    #     return 301 https://example.com$request_uri;
    # }

    access_log  /var/log/nginx/example.com.access.log  main;
    error_log   /var/log/nginx/example.com.error.log   warn;

    # SSL:
    # CRT+CA & Secret key
    ssl_certificate     /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;

    # SSL(Let'sEncrypt):
    # ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
    # ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;

    # Security:
    include global/Security.conf;

    # Basic Authentication:
    include global/BASIC-auth_conditions.conf;

    # Redirect (permanent = 301, redirect = 302):
    # rewrite ^/sample(.*)$ https://example.com/sample$1 permanent;

    # index.php
    index index.php;

    # index.php fallback
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # handle .php
    location ~ \.php$ {
        include global/php_fastcgi.conf;
    }

    # Logging and access control:
    include global/Logs-and-access-control.conf;

    # CMS:
    include global/CMS-WordPress-single.conf;
    # include global/CMS-WordPress-multi.conf;
    # include global/CMS-MODX.conf;

    # phpMyAdmin:
    include global/phpMyAdmin.conf;

    # Expires (jpg, jpeg, gif, png, svg, ico, css, js, swf, pdf, ttf, woff, eot, otf):
    include global/Expires-1d.conf;
    # include global/Expires-30d.conf;

    # Let'sEncrypt File Authentication:
    include global/LetsEncrypt-FileAuth.conf;

    # gzip:
    include global/gzip.conf;
}

# ip address and subdomains redirect
server {
    listen      443 ssl http2;
    listen [::]:443 ssl http2;

    server_name 10.0.0.1 *.example.com;

    # SSL:
    # CRT+CA & Secret key
    ssl_certificate     /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;

    # SSL(Let'sEncrypt):
    # ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
    # ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;

    return 302 https://example.com$request_uri;
}

# HTTP redirect
server {
    listen      80;
    listen [::]:80;

    server_name 10.0.0.1 example.com www.example.com *.example.com;

    include global/LetsEncrypt-FileAuth.conf;

    return 302 https://$host$request_uri;
}